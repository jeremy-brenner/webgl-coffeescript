// Generated by CoffeeScript 1.6.2
(function() {
  var webGLLessons,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  webGLLessons = (function() {
    function webGLLessons(canvas_id, picker_id) {
      this.render_lesson = __bind(this.render_lesson, this);      this.canvas_id = canvas_id;
      this.picker_id = picker_id;
      this.lessons = {};
    }

    webGLLessons.prototype.add = function(name, lesson) {
      this.lessons[name] = lesson;
      return this.render_picker();
    };

    webGLLessons.prototype.list = function() {
      return _.keys(this.lessons);
    };

    webGLLessons.prototype.render_picker = function() {
      var $picker, name, _i, _len, _ref, _results;

      $picker = $('#' + this.picker_id);
      $picker.empty();
      _ref = this.list();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        name = _ref[_i];
        _results.push($picker.append($('<li>').text(name).on('click', this.render_lesson)));
      }
      return _results;
    };

    webGLLessons.prototype.highlight_lesson = function(e) {
      return $(e.target).addClass('selected').siblings().removeClass('selected');
    };

    webGLLessons.prototype.render_lesson = function(e) {
      var name;

      this.highlight_lesson(e);
      name = $(e.target).text();
      if (__indexOf.call(this.list(), name) >= 0) {
        return new this.lessons[name](this.canvas_id);
      } else {
        return console.log("" + name + " doesn't exist.");
      }
    };

    return webGLLessons;

  })();

  window.web_gl_lessons = new webGLLessons('webgl-canvas', 'lesson-picker');

}).call(this);
